[RunInEditor]
class GridDisplacer : ZilchComponent
{
  [Property] var Camera = CogPath();
  
  [ShaderInput("GridThingGeo")] var HeightTexture : Texture;
  [ShaderInput("ParticleCloudVertex", "HeightTexture")] var HeightTexture2 : Texture;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Owner, Events.RenderTasksUpdate, this.OnRenderTasksUpdate);
    this.HeightTexture = this.Camera.CameraViewport.FinalTexture;
    this.HeightTexture2 = this.HeightTexture;
  }
  
  function OnRenderTasksUpdate(event : RenderTasksEvent)
  {
    var viewportSize = event.ViewportSize;
    var final = event.GetFinalTarget(viewportSize, TextureFormat.RG16f);
    event.AddRenderTaskClearTarget(final, Real4(0));
    
    var debugSettings = RenderSettings();
    debugSettings.ColorTarget = final;
    debugSettings.CullMode = CullMode.Disabled;
    
    debugSettings.BlendSettings.BlendMode = BlendMode.Separate;
    debugSettings.BlendSettings.BlendEquation = BlendEquation.Add;
    debugSettings.BlendSettings.SourceFactor = BlendFactor.SourceAlpha;
    debugSettings.BlendSettings.DestFactor = BlendFactor.InvSourceAlpha;
    debugSettings.BlendSettings.SourceFactorAlpha = BlendFactor.One;
    debugSettings.BlendSettings.DestFactorAlpha = BlendFactor.One;
    
    debugSettings.DepthSettings.DepthMode = DepthMode.Read;
    debugSettings.DepthSettings.DepthCompareFunc = TextureCompareFunc.LessEqual;
    
    event.AddRenderTaskRenderPass(debugSettings, RenderGroup.GridDisplacer, GridDisplaceRenderPass());
  }
}